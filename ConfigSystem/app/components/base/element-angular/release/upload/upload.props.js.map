{"version":3,"sources":["../../src/upload/upload.props.ts"],"names":[],"mappings":"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","file":"upload.props.js","sourceRoot":"","sourcesContent":["import { EventEmitter, Input, Output } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { UploadFile, Lifecycle, CommonFile, UploadResponse } from './upload.interface';\nexport class ElUploadProps {\n  \n   data: any = {}\n   name: string = 'file'\n   action: string\n   accept: string\n   drag: boolean = false\n   multiple: boolean = false\n   disabled: boolean = false\n   headers?: any = {}\n  \n   withCredentials: boolean = false\n   showFileList: boolean = true\n   listType: string = 'text'\n  // @Input('auto-upload') autoUpload: boolean = true\n   fileList: UploadFile[] = []\n  \n  // lifecycle event\n   preview: EventEmitter<CommonFile> = new EventEmitter<CommonFile>()\n   remove: EventEmitter<CommonFile> = new EventEmitter<CommonFile>()\n   progress: EventEmitter<UploadResponse<any>> = new EventEmitter<UploadResponse<any>>()\n  // about http event\n   success: EventEmitter<UploadResponse<any>> = new EventEmitter<UploadResponse<any>>()\n   error: EventEmitter<UploadResponse<any>> = new EventEmitter<UploadResponse<any>>()\n  \n   uploadFilter: (f: File) => boolean = f => true\n/**\n * @return {?}\n */\nprotected get lifecycle(): Lifecycle {\n    return {\n      preview: (f: CommonFile) => this.preview.emit(f),\n      remove: (f: CommonFile) => this.remove.emit(f),\n      success: (f: CommonFile, res: HttpResponse<any>) => this.success.emit({ commonFile: f, response: res }),\n      error: (f: CommonFile, err: any) => this.error.emit({ commonFile: f, error: err }),\n      progress: (f: CommonFile, percentage: number) => this.progress.emit({ commonFile: f, percentage }),\n    }\n  }\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'name': [{ type: Input },],\n'action': [{ type: Input },],\n'accept': [{ type: Input },],\n'drag': [{ type: Input },],\n'multiple': [{ type: Input },],\n'disabled': [{ type: Input },],\n'headers': [{ type: Input },],\n'withCredentials': [{ type: Input, args: ['with-credentials', ] },],\n'showFileList': [{ type: Input, args: ['show-file-list', ] },],\n'listType': [{ type: Input, args: ['list-type', ] },],\n'fileList': [{ type: Input, args: ['file-list', ] },],\n'preview': [{ type: Output },],\n'remove': [{ type: Output },],\n'progress': [{ type: Output },],\n'success': [{ type: Output },],\n'error': [{ type: Output },],\n'uploadFilter': [{ type: Input, args: ['upload-filter', ] },],\n};\n}\n\nfunction ElUploadProps_tsickle_Closure_declarations() {\n/** @type {?} */\nElUploadProps.propDecorators;\n/** @type {?} */\nElUploadProps.prototype.data;\n/** @type {?} */\nElUploadProps.prototype.name;\n/** @type {?} */\nElUploadProps.prototype.action;\n/** @type {?} */\nElUploadProps.prototype.accept;\n/** @type {?} */\nElUploadProps.prototype.drag;\n/** @type {?} */\nElUploadProps.prototype.multiple;\n/** @type {?} */\nElUploadProps.prototype.disabled;\n/** @type {?} */\nElUploadProps.prototype.headers;\n/** @type {?} */\nElUploadProps.prototype.withCredentials;\n/** @type {?} */\nElUploadProps.prototype.showFileList;\n/** @type {?} */\nElUploadProps.prototype.listType;\n/** @type {?} */\nElUploadProps.prototype.fileList;\n/** @type {?} */\nElUploadProps.prototype.preview;\n/** @type {?} */\nElUploadProps.prototype.remove;\n/** @type {?} */\nElUploadProps.prototype.progress;\n/** @type {?} */\nElUploadProps.prototype.success;\n/** @type {?} */\nElUploadProps.prototype.error;\n/** @type {?} */\nElUploadProps.prototype.uploadFilter;\n}\n\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}