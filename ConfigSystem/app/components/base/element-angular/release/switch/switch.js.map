{"version":3,"sources":["../../src/switch/switch.ts"],"names":[],"mappings":"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","file":"switch.js","sourceRoot":"","sourcesContent":["import { Component, EventEmitter, forwardRef, Input, OnInit, Output } from '@angular/core';\nimport { SafeStyle, DomSanitizer } from '@angular/platform-browser';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nexport class ElSwitch implements OnInit, ControlValueAccessor {\n  \n   name: string\n   disabled: boolean = false\n   width: number\n   activeIconClass: string\n   inactiveIconClass: string\n   activeText: string\n   inactiveText: string\n   activeColor: string = '#409EFF'\n   inactiveColor: string = '#C0CCDA'\n  \n  // bind value\n   model: boolean = false\n   modelChange: EventEmitter<any> = new EventEmitter<any>()\n  \n  hasText: boolean = false\n  realWidth: number\n  coreStyles: SafeStyle\n  iconTransform: SafeStyle\n/**\n * @param {?} sanitizer\n */\nconstructor(\nprivate sanitizer: DomSanitizer,\n  ) {\n  }\n/**\n * @param {?} nextValue\n * @return {?}\n */\nchangeHandle(nextValue: boolean): void {\n    this.model = nextValue\n    this.modelChange.emit(nextValue)\n    this.controlChange(nextValue)\n    this.updateStyles()\n  }\n/**\n * @return {?}\n */\nupdateStyles(): void {\n    let /** @type {?} */ baseStyle = `width: ${this.realWidth}px;`\n    const /** @type {?} */ translate = this.model ? `translate3d(${this.realWidth - 20}px, 0, 0)` : ''\n    const /** @type {?} */ color = this.model ? this.activeColor : this.inactiveColor;\n    const /** @type {?} */ colorStyles = `border-color: ${color}; background-color: ${color};`\n    \n    this.iconTransform = this.sanitizer.bypassSecurityTrustStyle(`transform: ${translate}`)\n    if (this.activeColor && this.inactiveColor) {\n      baseStyle += colorStyles\n    }\n    this.coreStyles = this.sanitizer.bypassSecurityTrustStyle(baseStyle)\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    this.realWidth = this.width ? this.width : 40\n    this.updateStyles()\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n    this.model = value\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: Function): void {\n    this.controlChange = fn\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: Function): void {\n    this.controlTouch = fn\n  }\nprivate controlChange: Function = () => {}\nprivate controlTouch: Function = () => {}\n  \nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'el-switch',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ElSwitch),\n    multi: true\n  }],\n  template: `\n    <label class=\"el-switch\"\n      [class.is-disabled]=\"disabled\"\n      [class.el-switch--wide]=\"hasText\"\n      [class.is-checked]=\"model\">\n      <div class=\"el-switch__mask\" *ngIf=\"disabled\"></div>\n      <input class=\"el-switch__input\" type=\"checkbox\"\n        [name]=\"name\" [disabled]=\"disabled\"\n        [ngModel]=\"model\" (ngModelChange)=\"changeHandle($event)\">\n      \n      <div class=\"el-switch__label el-switch__label--left\" [class.is-active]=\"!model\"\n        *ngIf=\"inactiveText || inactiveIconClass\">\n        <i [class]=\"inactiveIconClass\" *ngIf=\"inactiveIconClass\"></i>\n        <span *ngIf=\"!inactiveIconClass\">{{ inactiveText }}</span>\n      </div>\n\n      <span class=\"el-switch__core\" [style]=\"coreStyles\">\n        <span class=\"el-switch__button\" [style]=\"iconTransform\"></span>\n      </span>\n\n      <div class=\"el-switch__label el-switch__label--right\" [class.is-active]=\"model\"\n           *ngIf=\"activeText || activeIconClass\">\n        <i [class]=\"activeIconClass\" *ngIf=\"activeIconClass\"></i>\n        <span *ngIf=\"!activeIconClass\">{{ activeText }}</span>\n      </div>\n    </label>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DomSanitizer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input },],\n'disabled': [{ type: Input },],\n'width': [{ type: Input },],\n'activeIconClass': [{ type: Input, args: ['active-icon-class', ] },],\n'inactiveIconClass': [{ type: Input, args: ['inactive-icon-class', ] },],\n'activeText': [{ type: Input, args: ['active-text', ] },],\n'inactiveText': [{ type: Input, args: ['inactive-text', ] },],\n'activeColor': [{ type: Input, args: ['active-color', ] },],\n'inactiveColor': [{ type: Input, args: ['inactive-color', ] },],\n'model': [{ type: Input },],\n'modelChange': [{ type: Output },],\n};\n}\n\nfunction ElSwitch_tsickle_Closure_declarations() {\n/** @type {?} */\nElSwitch.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElSwitch.ctorParameters;\n/** @type {?} */\nElSwitch.propDecorators;\n/** @type {?} */\nElSwitch.prototype.name;\n/** @type {?} */\nElSwitch.prototype.disabled;\n/** @type {?} */\nElSwitch.prototype.width;\n/** @type {?} */\nElSwitch.prototype.activeIconClass;\n/** @type {?} */\nElSwitch.prototype.inactiveIconClass;\n/** @type {?} */\nElSwitch.prototype.activeText;\n/** @type {?} */\nElSwitch.prototype.inactiveText;\n/** @type {?} */\nElSwitch.prototype.activeColor;\n/** @type {?} */\nElSwitch.prototype.inactiveColor;\n/** @type {?} */\nElSwitch.prototype.model;\n/** @type {?} */\nElSwitch.prototype.modelChange;\n/** @type {?} */\nElSwitch.prototype.hasText;\n/** @type {?} */\nElSwitch.prototype.realWidth;\n/** @type {?} */\nElSwitch.prototype.coreStyles;\n/** @type {?} */\nElSwitch.prototype.iconTransform;\n/** @type {?} */\nElSwitch.prototype.controlChange;\n/** @type {?} */\nElSwitch.prototype.controlTouch;\n/** @type {?} */\nElSwitch.prototype.sanitizer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}