{"version":3,"sources":["../../src/button/button.ts"],"names":[],"mappings":"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","file":"button.js","sourceRoot":"","sourcesContent":["import {\n  Component, Input, Output, EventEmitter, OnInit, ChangeDetectionStrategy,\n  ElementRef,\n} from '@angular/core';\nimport { removeNgTag } from '../shared/utils/index';\nimport { SafeStyle, DomSanitizer } from '@angular/platform-browser';\nexport class ElButton implements OnInit {\n  \n   themeType: string = ''\n   nativeType: string = 'button'\n   size: string = ''\n   icon: string = ''\n   disabled: boolean = false\n   loading: boolean = false\n   plain: boolean = false\n   round: boolean = false\n   autofocus: boolean = false\n   style: string = ''\n   nativeClass: string = ''\n   click: EventEmitter<any> = new EventEmitter<any>()\n/**\n * @param {?} el\n * @param {?} sanitizer\n */\nconstructor(\nprivate el: ElementRef,\nprivate sanitizer: DomSanitizer,\n  ) {\n  }\n/**\n * @param {?} $event\n * @return {?}\n */\nclickHandle($event: Event): void {\n    this.click.emit($event)\n  }\n/**\n * @return {?}\n */\nextendStyles(): SafeStyle {\n    return this.sanitizer.bypassSecurityTrustStyle(this.style)\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    removeNgTag(this.el.nativeElement)\n  }\n  \nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'el-button',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n  <button (click)=\"clickHandle($event)\"\n    [class]=\"'el-button ' + (themeType ? ' el-button--' + themeType : '')\n      + (size ? ' el-button--' + size : '') + ' ' + nativeClass\"\n    [class.is-disabled]=\"disabled\"\n    [class.is-loading]=\"loading\"\n    [class.is-plain]=\"plain\"\n    [class.is-round]=\"round\"\n    [disabled]=\"disabled\"\n    [type]=\"nativeType\"\n    [style]=\"extendStyles()\"\n    [autofocus]=\"autofocus\">\n    <i class=\"el-icon-loading\" *ngIf=\"loading\"></i>\n    <i [class]=\"'el-icon-' + icon\" *ngIf=\"icon && !loading\"></i>\n    <ng-content></ng-content>\n  </button>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: DomSanitizer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'themeType': [{ type: Input, args: ['type', ] },],\n'nativeType': [{ type: Input, args: ['native-type', ] },],\n'size': [{ type: Input },],\n'icon': [{ type: Input },],\n'disabled': [{ type: Input },],\n'loading': [{ type: Input },],\n'plain': [{ type: Input },],\n'round': [{ type: Input },],\n'autofocus': [{ type: Input },],\n'style': [{ type: Input },],\n'nativeClass': [{ type: Input, args: ['class', ] },],\n'click': [{ type: Output },],\n};\n}\n\nfunction ElButton_tsickle_Closure_declarations() {\n/** @type {?} */\nElButton.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElButton.ctorParameters;\n/** @type {?} */\nElButton.propDecorators;\n/** @type {?} */\nElButton.prototype.themeType;\n/** @type {?} */\nElButton.prototype.nativeType;\n/** @type {?} */\nElButton.prototype.size;\n/** @type {?} */\nElButton.prototype.icon;\n/** @type {?} */\nElButton.prototype.disabled;\n/** @type {?} */\nElButton.prototype.loading;\n/** @type {?} */\nElButton.prototype.plain;\n/** @type {?} */\nElButton.prototype.round;\n/** @type {?} */\nElButton.prototype.autofocus;\n/** @type {?} */\nElButton.prototype.style;\n/** @type {?} */\nElButton.prototype.nativeClass;\n/** @type {?} */\nElButton.prototype.click;\n/** @type {?} */\nElButton.prototype.el;\n/** @type {?} */\nElButton.prototype.sanitizer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}