{"version":3,"sources":["../../src/select/option.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,KAAA,EAAe,QAAA,EAAS,MAAA,eAAA,CAAA;AAC5C,OAAO,EAAE,QAAA,EAAS,MAAA,UAAA,CAAA;AAClB,MAEC;IAMD;;OAEG;IACH,YACa,UAAY;QAAZ,eAAA,GAAA,UAAA,CAAY;QARtB,aAAQ,GAEY,KAAA,CAAA;QAArB,iBAAY,GAEY,KAAA,CAAA;QADxB,iBAAY,GAEY,KAAA,CAAA;IAKxB,CAAC;IACH;;;OAGG;IACH,WAHG,CAAA,KAAA;QAIC,KAAK,CAHC,eAAC,EAAe,CAAA;QAItB,EAAE,CAAC,CAAC,IAHC,CAAI,QAAC,IAAW,IAAA,CAAK,YAAC,CAAY;YAAC,MAAA,CAAA;QAIxC,IAAI,CAHC,UAAC,CAAU,WAAC,CAAW,IAAC,CAAI,KAAC,EAAM,IAAA,CAAK,KAAC,CAAK,CAAA;IAIrD,CAAC;IACH;;OAEG;IACH,QALG;QAMC,MAAM,gBAAgB,CALhB,YAAA,GAAe,GAAG,EAAA;YAMtB,IAAI,CALC,YAAC,GAAc,IAAA,CAAK,KAAC,KAAS,IAAA,CAAK,UAAC,CAAU,KAAC,CAAA;YAMpD,IAAI,CALC,YAAC,IAAe,IAAA,CAAK,UAAC,CAAU,WAAC,CAAW,IAAC,CAAI,KAAC,CAAK,CAAA;QAM9D,CAAC,CAAA;QACD,IAAI,CALC,YAAC,GAAc,IAAA,CAAK,UAAC,CAAU,QAAC,CAAA;QAMrC,YAAY,EALC,CAAA;QAMb,IAAI,CALC,UAAC,CAAU,UAAC,CAAU,IAAC,CAAI,YAAC,CAAY,CAAA;IAM/C,CAAC;;AAJI,mBAAA,GAAoC;IAM3C,EALE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAMvB,QAAQ,EALE,WAAA;gBAMV,QAAQ,EALE;;;;;;;GAYT;aACF,EALC,EAAG;CAMJ,CALC;AAMF;;GAEG;AANF,uBAAA,GAAA,GAAA,EAAA,CAAA;IAQD,EAAC,IAZC,EAAA,QAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA;CAaD,CAAC;AANK,uBAAA,GAAyD;IAQhE,OAAO,EAPE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAQ1B,OAAO,EAPE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAQ1B,UAAU,EAPE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;CAQ5B,CAPC;AAUF;IACA,gBAAgB;IAChB,QAAQ,CAAC,UAAU,CAAC;IACpB;;;OAGG;IACH,QAAQ,CAAC,cAAc,CAAC;IACxB,gBAAgB;IAChB,QAAQ,CAAC,cAAc,CAAC;IACxB,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC;IACzB,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC;IACzB,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC;IAC5B,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,YAAY,CAAC;IAChC,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,YAAY,CAAC;IAChC,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,UAAU,CAAC;AAC9B,CAAC","file":"option.js","sourceRoot":"","sourcesContent":["import { Component, Input, OnInit, Optional } from '@angular/core';\nimport { ElSelect } from './select';\nexport class ElOption implements OnInit {\n  \n   value: any\n   label: string | number\n   disabled: boolean = false\n  \n  rootDisabled: boolean = false\n  itemSelected: boolean = false\n/**\n * @param {?} rootSelect\n */\nconstructor(\nprivate rootSelect: ElSelect,\n  ) {\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nclickHandle(event: Event): void {\n    event.stopPropagation()\n    if (this.disabled || this.rootDisabled) return\n    this.rootSelect.changeLabel(this.label, this.value)\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    const /** @type {?} */ updateHandle = () => {\n      this.itemSelected = this.value === this.rootSelect.model\n      this.itemSelected && this.rootSelect.changeLabel(this.label)\n    }\n    this.rootDisabled = this.rootSelect.disabled\n    updateHandle()\n    this.rootSelect.subscriber.push(updateHandle)\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'el-option',\n  template: `\n    <li class=\"el-select-dropdown__item\"\n      [class.is-disabled]=\"disabled || rootDisabled\"\n      [class.selected]=\"itemSelected\"\n      (click)=\"clickHandle($event)\">\n      <span>{{ label }}</span>\n    </li>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElSelect, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'label': [{ type: Input },],\n'disabled': [{ type: Input },],\n};\n}\n\nfunction ElOption_tsickle_Closure_declarations() {\n/** @type {?} */\nElOption.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElOption.ctorParameters;\n/** @type {?} */\nElOption.propDecorators;\n/** @type {?} */\nElOption.prototype.value;\n/** @type {?} */\nElOption.prototype.label;\n/** @type {?} */\nElOption.prototype.disabled;\n/** @type {?} */\nElOption.prototype.rootDisabled;\n/** @type {?} */\nElOption.prototype.itemSelected;\n/** @type {?} */\nElOption.prototype.rootSelect;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}