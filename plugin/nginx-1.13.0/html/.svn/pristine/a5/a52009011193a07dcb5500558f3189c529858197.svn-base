'use strict';

angular.module('app')
	.controller('baseInfoAddController', ['$rootScope', '$scope', '$http', '$state',
	  function ($rootScope, $scope, $http, $state) {

	      $scope.record = {};
	      $scope.btnInfo = '提交';
	      $scope.btnState = false;

	      validate();
	      var id = $state.params.id;
	      console.log("baseInfoAdd id=" + id);

	      if (id) {
	          $scope.title = '编辑';
	          getModel(id);
	      } else {
	          $scope.title = '提交';
	      }

	      //百度编辑器
	      var myEditor = UE.getEditor("myEditor", {
	          topOffset: 0,
	          autoFloatEnabled: false,
	          autoHeightEnabled: false,
	          wordCount: false,
	          autotypeset: {
	              removeEmptyline: true
	          },
	          toolbars: [
                     [
                         //'source', //源代码
                         'bold', //加粗
                         'forecolor', //字体颜色
                         'indent', //首行缩进
                         'italic', //斜体
                         'underline', //下划线
                         'insertvideo', //视频                          
                         'simpleupload', //单图上传
                         'insertimage', //多图上传
                         //'inserttable', //插入表格
                         'link', //超链接
                         'removeformat',//清除格式
                         'huodong',

                     ]
	          ]
	      });

	   



	      //获取党员详情
	      function getModel(id) {
	          // 文件流转详情
	          $.ajax({
	              type: 'PUT',
	              url: '/iBase4J-SYS-Web/user/read/detail',
	              data: angular.toJson({ id: id })
	          }).then(function (result) {
	              $scope.loading = false;
	              if (result.httpCode == 200) {
	                  $scope.record = result.data;
	                  //个人简介
	                  if ($scope.record.remark != "") {
	                      myEditor.ready(function () {//编辑器初始化完成再赋值  
	                          myEditor.setContent($scope.record.remark);  //赋值给UEditor  
	                      });
	                  }
	                  //所属部门
	                  $('#deptId').attr('value', $scope.record.deptName);
	                  $('#treeids').attr('value', $scope.record.deptId);

	              } else {
	                  // $scope.msg = result.msg;
	                  alertDialog(result.msg, 2);
	              }

	              $scope.$apply();
	          });
	      }

	      function getSexList() {
	          var infoParam = {
	              enable: 1,
	              type: "SEX"
	          };
	          $.ajax({
	              type: 'PUT',
	              url: '/iBase4J-SYS-Web/dic/read/list',
	              dataType: 'json',
	              //async: false,
	              contentType: 'application/json;charset=UTF-8',
	              data: angular.toJson(infoParam)
	          }).then(function (result) {
	              if (result.httpCode == 200) {
	                  $scope.sexList = result.data;

	              } else {
	                  alertDialog(result.msg, 2);
	              }
	          });

	      }
	      $scope.dropdowmList = {};
	      $scope.dropdowmList.cityList = [];
	      getSexList();

	      var zNodes;

	      getDropdowmList();

	      //获取页面下拉框配置
	      function getDropdowmList() {
	          $.ajax({
	              type: "get",
	              url: '/iBase4J-SYS-Web/user/getAllSelect',
	          }).then(function (result) {
	              if (result.httpCode == 200) {
	                  $scope.dropdowmList = result.data;
	                  //console.log(result);
	                  zNodes = $scope.dropdowmList.deptList;
	                  $.fn.zTree.init($('#treeDemo'), setting, zNodes);
	                  $scope.$apply();
	              } else {
	                  alertDialog(result.msg, 2);
	              }
	          });
	      }
	      var setting = {
	          view: {
	              dblClickExpand: false,
	              showIcon: false
	          },
	          data: {
	              key: {
	                  name: "codeText"
	              },
	              simpleData: {
	                  enable: false,	                 
	              }
	          },
	          callback: {
	              onClick: onClick
	          }
	      };
	      function onClick(e, treeId, treeNode) { // 选择元素触发
	          var zTree = $.fn.zTree.getZTreeObj('treeDemo'),
              nodes = zTree.getSelectedNodes(),
              v = '',
              ids = '';
	          nodes.sort(function compare(a, b) { return a.id - b.id; });

	          for (var i = 0, l = nodes.length; i < l; i++) {
	              v += nodes[i].codeText + ',';
	              ids += nodes[i].id + ',';
	          }

	          if (v.length > 0) v = v.substring(0, v.length - 1);
	          var idObj = $('#deptId');
	          idObj.attr('value', v);

	          // 将选中的id放到隐藏的文本域中
	          if (ids.length > 0) {
	              ids = ids.substring(0, ids.length - 1);
	          }
	          var treeids = $('#treeids');
	          treeids.attr('value', ids);
	          $scope.record.deptId = ids;
	      }

	      $scope.showMenu = function () {
	          var idObj = $('#deptId');
	          var idOffset = $('#deptId').offset();
	          $('#menuContent').slideDown('fast');
	          $('body').bind('mousedown', onBodyDown);
	      }

	      $scope.hideMenu = function () {
	          $('#menuContent').fadeOut('fast');
	          $('body').unbind('mousedown', onBodyDown);
	      }

	      function onBodyDown(event) {
	          if (!event.target.id == 'menuContent' || $(event.target).parents('#menuContent').length == 0) {
	              if (event.target.id != 'deptId') {
	                  $scope.hideMenu();
	              }
	          }
	      }

	      // 日期
	      function setDate() {
	          //加入其他党团日期
	          laydate({
	              elem: '#otherPartyDate',
	              format: 'YYYY-MM-DD',

	          });
	          //出生日期
	          laydate({
	              elem: '#birthDay',
	              format: 'YYYY-MM-DD',

	          });
	          //参加工作日期
	          laydate({
	              elem: '#worktdate',
	              format: 'YYYY-MM-DD',

	          });
	      }
	      setDate();

	      $scope.submit = function () {

	          $scope.$apply();
	          $scope.record.remark = myEditor.getContent();
	          var postData = angular.copy($scope.record);

	          debugger;
	          if (id) postData.id = id;
	          if (!postData.deptId) {
	              alertDialog("所属组织不能为空", 2);

	              return;
	          } else if (!postData.birthDay) {
	              alertDialog("出生日期不能为空", 2);
	              return;
	          } else if (!postData.rddate) {
	              alertDialog("入党日期不能为空", 2);
	              return;
	          }

	          $scope.btnInfo = '提交中...';
	          $scope.btnState = true;
	          console.log(angular.toJson(postData));
	          $.ajax({
	              type: 'post',
	              url: '/iBase4J-SYS-Web/user',
	              data: angular.toJson(postData)
	          }).then(function (result) {
	              console.log(result);
	              if (result.httpCode == 200) {
	                  tipDialog("保存成功", 1, 0.8 * 1000, function () {
	                      $state.go('main.partyner');
	                  });
	              } else {
	                  alertDialog(result.msg, 2);
	              }
	              $scope.btnInfo = '添加';
	              $scope.btnState = false;

	          });
	      }



	      // 表单验证
	      function validate() {
	          var validator = jQuery('form').validate({
	              ignore: "",
	              rules: {
	                  userCode: {
	                      required: true,
	                      maxLengthB: [50]
	                  },
	                  userName: {
	                      required: true,
	                      maxLengthB: [10]
	                  },
	                  birthDay: { required: true, date: true },
	                  worktdate: { date: true },
	                  zzdate: { date: true },
	                  deptId: { required: true, },
	                  phone: { required: true, isMobile: true }, // 手机号
	                  rddate: { required: true, date: true },
	                  sex: { required: true },

	                  //wxNumber: { maxlength: 60 },
	                  identifienumber: { isIdCardNo: true }, // 身份证号
	                  hkPolice: { maxlength: 50 },
	                  address: { maxLengthB: [60] },
	                  unitDuty: { maxLengthB: [50] },
	                  email: { email: true },
	                  remark1: { maxLengthB: [1000] },
	                  remark2: { maxLengthB: [1000] },
	                  remark3: { maxLengthB: [1000] },
	                  myEditor: {
	                      maxLengthB: [1024]

	                  }
	              },
	              messages: {
	                  userCode: {
	                      required: "党员编号不能为空",
	                      maxlength: "党员编号长度不能超过50个字"
	                  },
	                  userName: {
	                      required: '请填写姓名',
	                      maxlength: '长度不能超过10个字符'
	                  },
	                  birthDay: { required: '出生日期为必填', date: '日期格式不正确' },
	                  worktdate: { date: '日期格式不正确' },
	                  zzdate: { date: '日期格式不正确' },
	                  deptId: { required: '请选择所属组织' },
	                  phone: { required: '请填写手机号码' },
	                  rddate: { required: '入党时间为必填', date: '日期格式不正确' },
	                  sex: { required: '请选择性别' },

	                  //wxNumber: { maxlength: '微信号长度不能超过60个字符' },
	                  address: { maxlength: '长度不能超过60个字符' },
	                  email: { email: '请输入正确的邮箱' },
	                  remark: { maxlength: '长度不能超过60个字符' },
	                  myEditor: {
	                      maxLengthB: "简介不得超过{0}个字符"

	                  }
	              },
	              submitHandler: function () {
	                  $scope.submit();
	              }
	          })
	          validator.focusInvalid = function () {
	              if (this.settings.focusInvalid) {
	                  try {
	                      var toFocus = $(this.findLastActive() || this.errorList.length && this.errorList[0].element || []);
	                      if (toFocus.is("textarea")) {
	                          UE.getEditor('myEditor').focus()
	                      } else {
	                          toFocus.filter(":visible").focus();
	                      }
	                  } catch (e) {
	                  }
	              }
	          }
	      }

	      // // 编辑时获取详情
	      // function activate(userId) {
	      //     var id = parseInt(userId)
	      //     $.ajax({
	      //         type: 'put',
	      //         url: '/iBase4J-SYS-Web/user/read/detail',
	      //         dataType: 'json',
	      //         contentType: 'application/json;charset=UTF-8',
	      //         data: angular.toJson({ id: id })
	      //     }).then(function (result) {
	      //         console.log(result);
	      //         if (result.httpCode == 200) {
	      //             $scope.record = result.data;
	      //             if ($scope.record.remark != "") {
	      //                 myEditor.ready(function () {//编辑器初始化完成再赋值  
	      //                     myEditor.setContent($scope.record.remark);  //赋值给UEditor  
	      //                 });
	      //             }
	      //             $('#deptId').attr('value', $scope.record.deptName);
	      //             $('#treeids').attr('value', $scope.record.deptId);
	      //             // console.log($scope.record.sex)
	      //         } else {
	      //             alertDialog(result.msg, 2);
	      //         }
	      //         $scope.$apply();
	      //     });
	      // }

	      // $scope.cancel = function () {
	      // 	layer.confirm('您确认放弃本次编辑吗？' ,function (index) {
	      // 		layer.close(index);
	      // 		$state.go('main.partyner');
	      // 	})
	      // }

	      // // 比较时间先后 a > b;
	      // function diffCompare(aTime, aTxt, bTime, bTxt) {
	      //     var d1 = new Date(aTime.replace(/\-/g, "\/"));
	      //     var d2 = new Date(bTime.replace(/\-/g, "\/"));
	      //     if (aTime != '' && bTime != '' && d1 >= d2) {
	      //         layer.alert(aTxt + '不能超过' + bTxt + '或与' + bTxt + '相同', { icon: -1 })
	      //         // return false;
	      //         dateState = false;
	      //     }
	      // }
	      // // 与现在比较
	      // function curCompare(time) {
	      //     var current = new Date();
	      //     var _time = time;
	      //     var d1 = new Date(_time.replace(/\-/g, "\/"));
	      //     if (_time != "" && current != "" && d1 > current) {
	      //         layer.alert('不能超过今天', { icon: -1 })
	      //         // return false;
	      //         dateState = false;
	      //     }
	      // }
	  }]);