'use strict';

angular.module('app')
	.controller('meetingAddController', [ '$rootScope', '$scope', '$http', '$state','toaster','$timeout',
    function($rootScope, $scope, $http, $state,toaster, $timeout) {

    	var id = $state.params.id;
    	var dateState = true;

    	$scope.record = {};
    	$scope.item = [];
			$scope.checkdList = [];//已选择列表
			$scope.checkdIds = [];
			$scope.isSelected = false;
			$scope.infoLength = 0;//数据加载后需初始化为0
			$scope.info = {};
			$scope.deptId = '';

    	if (id) {
    		$scope.title = '编辑';
    		getDetail(id);
    	} else {
    		$scope.title = '添加';
    	}
    	validate();
    	getMeetingType();

    	function getMeetingType() { // 会议类型暂无接口
    		var infoRecord = {
	    		enable: 1,
	    		keyword: $scope.record.keyword,
	    		type: 'METTINGTYPE'
	    	};
    		$.ajax({
	    		type: 'PUT',
					url : '/iBase4J-SYS-Web/dic/read/list',
	        dataType: 'json',
					contentType:'application/json;charset=UTF-8',
					data: angular.toJson(infoRecord)
				}).then(function (result) {
					$scope.mtypeList = result.data;
					// console.log(result);
					if($scope.mtypeList.length > 0) {
						$scope.record.mtype = $scope.mtypeList[0].code;
					}
					$scope.$apply();
				});
    	}

    	// 获取详情(编辑时)
    	function getDetail(id) {
    		$.ajax({
	    		type: 'PUT',
					url : '/iBase4J-SYS-Web/sysMeeting/read/preUpdateDetail',
	        dataType: 'json',
					contentType:'application/json;charset=UTF-8',
					data: angular.toJson({id: id})
				}).then(function (result) {
					console.log(result);
					$scope.record = result.data;
					var checkds = [];
					var list;
					$.each(result.data.userList, function (index, item) {
						list = {};
						list.userName = item.username;
						list.dnzwText = item.duty;
						checkds.push(list);
						$scope.checkdIds.push(item.meetid);
					})
					$scope.checkdList = checkds;
					$scope.$apply();
				});
    	}

    	// 日期
	    laydate({
	    	elem: '#startdate',
	    	format: 'YYYY-MM-DD',
	    	choose: function (dates) {
	    		var _date = dates;
	    		curCompare(_date);
	    		if ($scope.record.enddate) {
	    			diffCompare(_date, '开始时间', $scope.record.enddate, '结束时间');
	    		}
	    		if (!dateState) {
	    			$(this.elem).val(''); dateState = true
	    	  } else {
		    		$scope.record.startdate = dates;
	    	  }
	    	}
	    })
	    // 日期
	    laydate({
	    	elem: '#enddate',
	    	format: 'YYYY-MM-DD',
	    	choose: function (dates) {
	    		var _date = dates;
	    		curCompare(_date);
	    		if ($scope.record.startdate) {
	    			diffCompare($scope.record.startdate, '开始时间', _date, '结束时间');
	    		}
	    		if (!dateState) {
	    			$(this.elem).val(''); dateState = true
	    	  } else {
		    		$scope.record.enddate = dates;
	    	  }
	    	}
	    })

    	//党组织结构设置
			var setting = {
				data: {
					key : {
						id : "id",
						children : "children",
						name : "deptName"
					}
				},
				callback:{
					onClick: onClick
	      }
			};

			//获取选中子级
			function onClick(e,treeId,treeNode){
				$scope.deptid= treeNode.id ;		
		    $scope.searchPerson();
	    }

	    //党组织结构树
			$.ajax({
				type: 'PUT',
				dataType: 'json',
				contentType:'application/json;charset=UTF-8',
				url : '/iBase4J-SYS-Web/dept/read/treelist',
				data: ''
			}).then(function(result) {
				$scope.loading = false;
				if (result.httpCode == 200) {
					//console.log(result);
					var zNodes = result.dept;
					var treeObj = $.fn.zTree.init($("#treeDemo"), setting, zNodes);
					treeObj.expandAll(true);
				} else {
					$scope.msg = result.msg;
				}
				$scope.$apply();
			});

			$scope.searchPerson= function(){
				$.ajax({
					type: 'PUT',
					dataType: 'json',
					contentType:'application/json;charset=UTF-8',
					url : '/iBase4J-SYS-Web/user/read/list',
					data: angular.toJson({deptId:$scope.deptid})
				}).then(function(result) {
					$scope.loading = false;
					// console.log(result);
					if (result.httpCode == 200) {
						if($scope.checkdIds.length > 0){
							var infoNew = [];
							// console.log($scope.checkdIds);
							for(var i in result.data){
								var num = $.inArray(result.data[i].id, $scope.checkdIds);
								if(num == -1){
									infoNew.push(result.data[i]);
								}
							}
							$scope.info.data = infoNew;
						} else {
							$scope.info.data = result.data;
						}

					} else {
						$scope.msg = result.msg;
					}
					console.log($scope.info.data);
					$scope.$apply();
				});
			}

			//点击待选人员->已选中列表
			$scope.checkInfo = function(key){
				var moveInfo = $scope.info.data.slice(key,key+1);
				$scope.info.data.splice(key,1);
				$scope.checkdList.unshift(moveInfo[0]);
				$scope.checkdIds.unshift(moveInfo[0].id);
				
			}
			//点击删除已选中->待选列表
			$scope.delChecked = function(key){
				$scope.isSelected = false;
				var moveInfo = $scope.checkdList.slice(key,key+1);
				$scope.checkdList.splice(key,1);
				$scope.info.data.unshift(moveInfo[0]);
				$scope.checkdIds.splice(key,1);
			}
			
			//全选/取消全选
			$scope.checkAll = function(){
				if($scope.isSelected){
					$scope.isSelected = false;
					var moveInfo = $scope.checkdList.slice(0,$scope.infoLength);
					$scope.checkdList.splice(0,$scope.infoLength);
					$scope.checkdIds.splice(0,$scope.infoLength);
					$scope.info.data = moveInfo;
					
				} else {
					$scope.infoLength = $scope.info.data.length;
					var arrTmp = angular.copy($scope.info.data);
					$.merge(arrTmp,$scope.checkdList);
					$scope.checkdList = arrTmp;
					var ids = [];
					for(var i in $scope.info.data){
						ids.push($scope.info.data[i].id);
					}
					var strIds = angular.copy($scope.checkdIds);
					$.merge(ids,strIds);
					$scope.checkdIds = ids;
					$scope.info.data = [];
					$scope.isSelected = true;
				}
			}

    	// 表单验证
	    function validate(userId){
	      jQuery('form').validate({
	        rules: {
	        	mname: { required: true, maxlength: 500 },
	        	startdate: {	required: true, date: true },
	        	enddate: { required: true, date: true },
	        	mplace: { maxlength: 200 },
	        	mcontent: { maxlength: 1000 }

	        },
	        messages: {
	          mname: { required: '请填写会议主题', maxlength: '长度不能超过500个字符' },
	          startdate: { required: '开始时间为必填', date: '日期格式不正确' },
	          enddate: { required: '结束时间为必填', date: '日期格式不正确' },
	          mplace: { required: '不能超过200字' },
	          mcontent: { maxlength: '不能超过1000字' }
	        },
	        submitHandler: function() {
	          $scope.submit();
	        }
	      })
	    }

	    $scope.submit = function () {
	    	console.log($scope.checkdIds);
	    	var m = angular.copy($scope.record);
	    	var m = {
	    		enddate: $scope.record.enddate,
	    		id: id,
	    		mcontent: $scope.record.mcontent,
	    		mname: $scope.record.mname,
	    		mplace: $scope.record.mplace,
	    		mtype: $scope.record.mtype ? $scope.record.mtype : '',
	    		position: $scope.record.position ? $scope.record.position : '',
	    		startdate: $scope.record.startdate,
	    		userids: $scope.checkdIds
	    	};

	    	$.ajax({
					type: 'post',
					dataType: 'json',
					contentType:'application/json;charset=UTF-8',
					url : '/iBase4J-SYS-Web/sysMeeting',
					data: angular.toJson(m)
				}).then(function(result) {
					console.log(result);
					if(result.httpCode == 200) {
						toaster.clear('*');
	          toaster.pop('success', '', '保存成功');
	          $timeout(function(){
		          $state.go('main.life.meeting');
	          },800);
					} else {
						toaster.clear('*');
	          toaster.pop('success', '', result.msg);
					}
				})
	    }

	    $scope.cancel = function () {
	    	if(confirm('确定要退出吗？')) {
	    		history.go(-1);
	    	}
	    }

	    // 比较时间先后 a > b;
	    function diffCompare(aTime, aTxt, bTime, bTxt) {
	    	var d1 = new Date(aTime.replace(/\-/g, "\/"));
	    	var d2 = new Date(bTime.replace(/\-/g, "\/"));
	    	if (aTime != '' && bTime != '' && d1 >= d2) {
	    		layer.alert(aTxt + '不能超过' + bTxt + '或与' + bTxt + '相同', {icon: -1})
    			// return false;
				 	dateState = false;
	    	}
	    }
	    // 与现在比较
	    function curCompare(time) {
	    	var current = new Date();
	    	var _time = time;
				var d1 = new Date(_time.replace(/\-/g, "\/"));
				if(_time != "" && current != "" && d1 > current) {
				 	layer.alert('不能超过今天', {icon: -1})
				 	// return false;
				 	dateState = false;
				}
	    }
    }])